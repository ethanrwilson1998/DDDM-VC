import os
import whisper
from glob import glob

def transcribe_audio(audio_path):
    model = whisper.load_model("turbo")
    result = model.transcribe(audio_path)
    transcript_path = audio_path.replace(".wav", ".txt")
    with open(transcript_path, "w") as f:
        f.write(result["text"])
    print(f"Transcript saved: {transcript_path}")

def process_folder(audio_folder):
    participants = sorted(os.listdir(audio_folder))  # Get sorted participant folders
    
    for participant in participants:
        participant_path = os.path.join(audio_folder, participant)
        
        if not os.path.isdir(participant_path):
            continue  # Skip if not a directory
        
        audio_clips = sorted(glob(os.path.join(participant_path, "*.wav")))
        
        for clip in audio_clips:
            print(f'Transcribing {clip}...')
            transcribe_audio(clip)  # Generate transcript for each audio file
    
    print(">> Transcription Process Complete.")

if __name__ == '__main__':
    import argparse
    
    parser = argparse.ArgumentParser()
    parser.add_argument('--audio_folder', type=str, required=True, help='Path to folder containing participant audio')
    args = parser.parse_args()
    
    process_folder(args.audio_folder)
